架构设计

                              (192.168.1.241)ld1(192.168.6.11)    app1(192.168.6.101)                       master1(192.168.6.201)                       slave1(192.168.6.211)
client -> VIP(192.168.1.240)-|            heartbeat           |--|                   |--|VIP(192.168.6.240)-| heartbeat           |--|VIP(192.168.1.241)-|
                              (192.168.1.242)ld2(192.168.6.12)    app2(192.168.6.102)                       master2(192.168.6.202)                       slave1(192.168.6.212)

说明：
1. 调度器 ld1 ld2 运行 lvs 调度真实的 web 服务器。
调度器只能有一个是 active 的，因为是一个虚拟 IP(192.168.1.240) ，同时 active 会造成冲突。
ld1 down 掉后，ld2 检测到 ld1 的心跳停止后会启用虚拟 IP 并接管调度任务。

2. 真实 web 服务器其实也是 ld1 ld2 ，运行了 nginx 直接响应静态请求。
动态的 php 请求转给了 app1 和 app2 这两部应用服务器。
真实 web 服务器和应用服务器都是同时 active 的，一台 down 掉不会影响正常访问。

3. 主数据库是 master1 和 master2 服务器，执行来自 app1 和 app2 的数据库写入更改操作。
两个主库之间用 DRBD 做了基于网络的 RAID1 即时同步写入数据。
从数据库是 slave1 和 slave2 服务器，执行查询操作。主库与从库之间通过复制保持同步。

4. 程序文件存储放在了 ld1 ld2 app1 app2 这四个节点上。
通过 csync2 + inotify 来同步数据，主节点为 ld1 ，即时同步到 ld2 app1 app2 。
web 服务的根目录在 /home/www/wwwroot ，php 的 session 存放在了默认的 /var/lib/php5 ，
这会造成 session 的不同步，需要使用 memcached 或者数据库来存放。

5. 用户文件存储也可先放在 ld1 ld2 app1 app2 上，可用 moosefs 实现，但测试时可先使用 NFS 。


设备及价格：
数据库机器全部使用品牌机： 4core*2/8G/RAID5/SAS
其它机器： 4core/4G/RAID1/SATAII
网络连接为 千兆交换机

数据库服务器以 2.5W 一台计算，大概就是 10W 左右。
其它机器完成集群基础架构也有四台，以 1W 一台计算， 4W 左右。（流量增长较快的话， app 很快就会加机器）
交换机 3k 左右。
第一年机柜的租用费 4W 左右。
实施费用按设备价格的 10% 计算，约为 1.43W 左右。
前期投入大概 19.6W