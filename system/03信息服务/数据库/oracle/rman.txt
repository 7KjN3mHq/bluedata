查看保留策略：
show retention policy;

配置保留策略：
configure retention policy to redundancy 2;

报告过期备份：
report obsolete;

删除过期备份：
delete noprompt obsolete;

手工删除备份文件后，需要验证备份是否有效并删除过期备份信息：
crosscheck backup;
delete expired backup;

手工删除归档日志后，验证归档日志文件并删除缺失的归档日志信息：
crosscheck archivelog all;
delete noprompt expired archivelog all;

控制文件拷贝备份：
backup as copy current controlfile format '/opt/oracle/orabackup/control01.ctl';

参数文件的自动备份：
如果设置了控制文件自动备份， Oracle 会在数据库发生重大变化（如增减表空间）时自动进行控制文件和 SPFILE 文件的备份。
设置控制文件自动备份：
rman target /
RMAN> configure controlfile autobackup on;

查看是否启用自动备份：
RMAN> show controlfile autobackup;
SQL> select * from v$rman_configuration;

更改自动备份的位置：
RMAN> configure controlfile autobackup format for device type disk to '/opt/oracle/orabackup/control%F';

检查自动备份：
SQL> select * from v$backup_spfile;
RMAN> list backup of spfile;

使用自动备份恢复控制文件：
数据库可以 mount:
RMAN> restore controlfile to '/tmp/control01.ctl' from autobackup;
也可恢复 SPFILE 文件：
RMAN> restore spfile to '/tmp/spfileorcl.ora' from autobackup;

数据库不能 mount:
RMAN> restore controlfile to '/tmp/control01.ctl' from '<controlc-DBID-YYYYMMDD-QQ>';

数据库不能 nomount:
编辑一个临时 PFILE 文件启动实例再恢复。
也可使用 RMAN 启动默认实例进行恢复：
rman target /
RMAN> startup nomount;
恢复 SPFILE 后再恢复控制文件，如：
restore spfile to '/tmp/spfileorcl.ora' from '/opt/oracle/orabackup/controlc-2683682981-20090919-03';
restore controlfile to '/tmp/control01.ctl' from '/opt/oracle/orabackup/controlc-2683682981-20090919-03';


ORA-01152 错误：
因为 controlfile 里所记录的 scn 与 datafile 里的 scn 不一致。
如果当前 Redo 都可用，可以通过 noresetlogs 参数重建控制文件， Oracle 能够从日志文件中读取 Redo 信息，记录到控制文件中。实现完全恢复。
startup nomount;
CREATE CONTROLFILE REUSE DATABASE "ORCL" NORESETLOGS  ARCHIVELOG
...
按照控制文件的跟踪文件里的步骤完成参数的设置。
再正常打开数据库并给零时表空间增加数据文件。
如果日志文件有损坏，以 resetlogs 参数重建控制文件，则还需要进行恢复：
recover database using backup controlfile until cancel;
输入 AUTO ，最后可输入 CANCEL ，然后 resetlogs 打开数据库：
alter database open resetlogs;


备份 system 表空间：
backup datafile 1;


镜像 COPY 功能：
run {
allocate channel ch1 type disk;
copy
datafile 5 to '/opt/oracle/orabackup/mptable.dbf',
current controlfile to '/opt/oracle/orabackup/control01.ctl';
}

全数据库镜像拷贝备份：
run {
backup as copy tag "copy" database;
}

查看数据库的拷贝文件列表：
list copy;

基于镜像 COPY 的表空间恢复，恢复文件到不同位置：
startup mount;
run {
set newname for datafile 5 to '/opt/oracle/oradata/ORCL/mptable.dbf';
restore datafile 5;
switch datafile all;
recover datafile 5;
}

手动删除数据文件造成的 ORA-01116 错误，可先 offline 数据文件再恢复：
SQL> alter database datafile '/opt/oracle/oradata/ORCL/datafile/mptable.dbf' offline;
RMAN> restore datafile 5;
RMAN> recover datafile 5;
SQL> alter database datafile '/opt/oracle/oradata/ORCL/datafile/mptable.dbf' online;


基于 SCN 的不完全恢复：
run {
set until scn <SCN>;
restore database;
recover database;
}

基于时间的不完全恢复：
run {
set until time '2009-09-20 09:45:30';
restore database;
recover database;
}


完全备份：
run {
backup full tag 'orcl' database
include current controlfile format '/opt/oracle/orabackup/orclfull_%d_%T_%s'
plus archivelog format '/opt/oracle/orabackup/orclarch_%d_%T_%s' delete all input;
}

查看备份结果：
list backup;

完全恢复：
RMAN> startup mount;
RMAN> restore database;
RMAN> recover database;
RMAN> alter database open;

不完全恢复：
export NLS_DATE_FORMAT="yyyy-mm-dd hh24:mi:ss"
rman target /
RMAN> startup mount;
RMAN> restore database;
RMAN> recover database until time '2009-09-21 09:55:30';
RMAN> alter database open resetlogs;


Oracle 10g Block Change Tracking:
启用跟踪：
alter database enable block change tracking using file '/opt/oracle/flash_recovery_area/ORCL/block_track.log';

查看：
select filename, status, bytes/1024/1024 as M from v$block_change_tracking;

关闭跟踪：
alter database disable block change tracking;


基于数据块的恢复：
验证数据文件，发现坏块：
RMAN> backup validate datafile 5;

查询坏块：
SQL> select * from v$database_block_corruption where file#=5;

恢复坏块：
RMAN> blockrecover datafile 5 block 14 from backupset;

清除 block corruption 信息：
RMAN> backup validate datafile 5;


恢复备份集到不同主机：
备份源数据库：
RMAN> backup database plus archivelog;

备份控制文件：
RMAN> backup current controlfile;

导出当前实例的参数：
set linesize 120
set pagesize 999
set heading off
set feedback off
spool /tmp/inittmp.ora
select '*.'||name||' = ' || value from v$parameter where isdefault = 'FALSE';
spool off

修改后启动目标数据库：
export ORACLE_SID=orcl
sqlqlus '/ as sysdba'
SQL> startup nomount pfile=?/dbs/initorcl.ora

Windows 平台可通过 oradim 创建一个服务启动 Oracle 环境：
C:\>oradim -new -sid orcl
C:\>set oracle_sid=orcl
C:\>rman target /
RMAN> startup nomount;

通过备份的控制文件恢复出控制文件：
restore controlfile
to '/opt/oracle/oradata/ORCL/controlfile/o1_mf_5c60nk2p_.ctl'
from '/opt/oracle/flash_recovery_area/ORCL/backupset/2009_09_21/o1_mf_ncnnf_TAG20090921T163424_5cggnjpf_.bkp';

加载数据库：
RMAN> alter database mount;

把备份集加载到控制文件：
RMAN> catalog start with '/opt/oracle/flash_recovery_area/ORCL/backupset';

效验备份集：
RMAN> crosscheck backup;

恢复数据文件：
RMAN> restore database;

应用归档日志进行恢复：
RMAN> recover database;

最后通过 resetlogs 方式打开数据库：
RMAN> alter database open resetlog;


增量备份：
backup incremental level=0 database plus archivelog delete input;
backup incremental level=1 database plus archivelog delete input;


目录数据库模式：
创建表空间：
create tablespace rman
datafile 'D:\oracle\product\10.2.0\oradata\mptest\rman01.dbf'
size 100M autoextend on next 10M maxsize 2048M
extent management local uniform size 128K;

创建用户并授权：
create user rman identified by rmanbak
default tablespace rman
temporary tablespace temp
quota unlimited on rman;

grant connect, resource, recovery_catalog_owner to rman;

创建恢复目录：
rman catalog rman/rmanbak
create catalog;

注册目标数据库：
rman catalog rman/rmanbak target mpuser/mp@orcl
register database;
注销：
unregister database;