Nginx Squid 构建高性能 WEB 前端

系统配置
建议将整个系统的文件句柄值至少设置为 65536 ，可以使用以下命令查看文件句柄当前的使用情况：
cat /proc/sys/fs/file-nr
256    0       203660

203660 是 CentOS 4.x file-max 的默认值。如果系统的 file-max 较小，可以增大：
echo -ne "
fs.file-max = 65536
" >> /etc/sysctl.conf

增大 file-max 的值，还需要设置 Shell 对一个进程打开的文件句柄数量的限制：
ulimit -a | grep "open files"
open files                      (-n) 1024

要增大这个值，可以修改 /etc/security/limits.conf （需要重新登陆）：
echo -ne "
* soft nofile 65536
* hard nofile 65536
" >> /etc/security/limits.conf

TCP 方面的优化
echo -ne "
net.ipv4.tcp_fin_timeout = 30
net.ipv4.tcp_keepalive_time = 300
net.ipv4.tcp_syncookies = 1
net.ipv4.tcp_tw_reuse = 1
net.ipv4.tcp_tw_recycle = 1
" >> /etc/sysctl.conf

设置向外连接的端口范围
查看当前范围：
cat /proc/sys/net/ipv4/ip_local_port_range
32768   61000

可以扩大范围
echo "net.ipv4.ip_local_port_range = 5000    65000" >> /etc/sysctl.conf

使更改生效：
sysctl -p


Squid 部分
安装 Squid
下载： http://www.squid-cache.org/Download/
tar jxvf squid-3.0.STABLE9.tar.bz2
cd squid-3.0.STABLE9
./configure \
--prefix=/usr/local/squid \
--enable-dlmalloc \
--with-pthreads \
--enable-async-io=384 \
--enable-storeio=null \
--enable-removal-policies="heap,lru" \
--enable-delay-pools \
--enable-useragent-log \
--enable-referer-log \
--disable-wccp \
--disable-wccpv2 \
--enable-kill-parent-hack \
--enable-arp-acl \
--enable-cache-digests \
--enable-default-err-languages="Simplify_Chinese" \
--enable-err-language="Simplify_Chinese" \
--disable-select \
--disable-poll \
--enable-epoll \
--disable-ident-lookups \
--enable-truncate \
--enable-underscore \
--enable-stacktrace \
--enable-x-accelerator-vary \
--enable-follow-x-forwarded-for

make
make install

配置 Squid
vi /usr/local/squid/etc/squid.conf
http_port 3128 vhost vport

icp_port 0

cache_peer 127.0.0.1 parent 81 0 no-query originserver no-digest

acl Manager proto cache_object
acl Purge method PURGE
acl Localhost src 127.0.0.1
http_access allow Manager Localhost
http_access deny Manager
http_access allow Localhost Purge
http_access deny Purge

acl Safe_ports port 80 3128
http_access deny !Safe_ports
http_access allow all

visible_hostname cache1
cache_mgr bluedata@jc001.cn

cache_effective_user nobody
cache_effective_group nobody

tcp_recv_bufsize 65535 bytes
client_persistent_connections off
server_persistent_connections on
half_closed_clients off

cache_mem 1280 MB
cache_swap_low 90
cache_swap_high 98
maximum_object_size 256 KB
minimum_object_size 0 KB
maximum_object_size_in_memory 256 KB
ipcache_size 1024
ipcache_low 90
ipcache_high 95
fqdncache_size 1024
cache_replacement_policy lru
memory_replacement_policy lru
cache_dir null /tmp
cache_store_log none

refresh_pattern -i .html 60 90% 4320 reload-into-ims
refresh_pattern -i .htm 60 90% 4320 reload-into-ims
refresh_pattern -i .shtml 60 90% 4320 reload-into-ims
refresh_pattern -i .png 1440 90% 10080 reload-into-ims
refresh_pattern -i .gif 1440 90% 10080 reload-into-ims
refresh_pattern -i .bmp 1440 90% 10080 reload-into-ims
refresh_pattern -i .jpg 1440 90% 10080 reload-into-ims
refresh_pattern -i .js 1440 90% 10080 reload-into-ims
refresh_pattern -i .css 1440 90% 10080 reload-into-ims
refresh_pattern -i .swf 1440 90% 10080 reload-into-ims

forward_timeout 20 seconds
connect_timeout 15 seconds
read_timeout 3 minutes
request_timeout 1 minutes
persistent_request_timeout 15 seconds
client_lifetime 15 minutes
shutdown_lifetime 5 seconds
negative_ttl 10 seconds

access_log none
cache_log /dev/null
pid_filename /var/run/squid.pid

acl QUERY urlpath_regex cgi-bin .php .cgi .avi .wmv .rm .ram .mpg .mpeg .zip .exe .aspx .asp .jsp
cache deny QUERY

vi /etc/rc.local
/usr/local/squid/bin/RunCache


Nginx 部分
安装 Nginx
下载： http://nginx.net/
下载 ngx_http_upstream_hash_module ： http://wiki.codemongers.com/NginxHttpUpstreamRequestHashModule
yum -y install pcre-devel zlib-devel
tar zxvf nginx-0.7.17.tar.gz
tar zxvf nginx_upstream_hash-0.3.tar.gz
cd nginx-0.7.17
patch -p0 < ../nginx_upstream_hash-0.3/nginx.patch
./configure \
--user=nobody \
--group=nobody \
--prefix=/usr/local/proxy \
--with-http_stub_status_module \
--add-module=../nginx_upstream_hash-0.3
make
make install
cd ..

配置 Nginx
mkdir /var/log/proxy
cd /usr/local/proxy
mv logs conf/vhosts
cd conf
vi nginx.conf
user  nobody nobody;

worker_processes  2;

worker_cpu_affinity 01 10;

worker_rlimit_nofile 65536;

pid  /var/run/proxy.pid;

error_log  /var/log/proxy/error.log;

events {
    use  epoll;
    worker_connections  65536;
}


http {
    include  mime.types;
    default_type  text/html;
    charset gbk;

    log_format  main  '$remote_addr - $remote_user [$time_local] $request '
                      '"$status" $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  /var/log/proxy/access.log  main;
    access_log  /dev/null;

    keepalive_timeout  30;

    gzip  on;
    gzip_min_length  1000;
    gzip_buffers  4 8k;
    gzip_types  text/* application/javascript application/x-javascript;
    gzip_comp_level  9;
    gzip_proxied  any;
    gzip_vary  on;
    gzip_http_version  1.0;

    output_buffers  4 32k;
    postpone_output  1460;

    client_header_buffer_size  128k;
    large_client_header_buffers  4 256k;

    client_header_timeout  1m;
    client_body_timeout    1m;
    send_timeout           1m;
    sendfile  on;
    tcp_nopush  on;
    tcp_nodelay  on;

    limit_zone one $binary_remote_addr 10m;

    include upstream.conf;

    include vhosts/default.conf;
}

vi upstream.conf
upstream cache {
    server cache1:3128;
    server cache2:3128;
    hash  $request_uri;
    hash_again 1;
}

vi vhosts/default.conf
server {
    include  port.conf;
    server_name  _;
    server_name_in_redirect  off;
    include location.conf;
    location / {
        limit_conn one 2;
        limit_rate  64k;
        proxy_pass  http://cache;
        error_page 502 504 $scheme://$host:3128$uri;
        include proxy.conf;
    }
}

vi port.conf
listen  80;

vi location.conf
location /server-status {
    stub_status  on;
}

vi proxy.conf
#proxy_set_header X-Forwarded-For $remote_addr;
#proxy_set_header REMOTE_ADDR $remote_addr;
#proxy_set_header RealIP $remote_addr;
#proxy_set_header Host $proxy_host;
proxy_set_header Host $host;
#proxy_set_header Accept-Encoding '';

#proxy_hide_header X-Cache;
#proxy_hide_header X-Powered-By;
#proxy_hide_header Last-Modified;
#proxy_hide_header Date;
#proxy_hide_header Content-Length;
#proxy_hide_header Content-Language;
#proxy_hide_header Cache-Control;

#proxy_pass_header Server;

client_max_body_size    8m;
proxy_connect_timeout   5s;
proxy_send_timeout      1m;
proxy_read_timeout      1m;
proxy_temp_file_write_size 1024m;
proxy_buffer_size         32k; 
proxy_buffers             4 32k; 
proxy_busy_buffers_size 64k; 

proxy_ignore_client_abort on;

proxy_next_upstream error timeout invalid_header http_500 http_503;

/usr/local/proxy/sbin/nginx -t
/usr/local/proxy/sbin/nginx -c /usr/local/proxy/conf/nginx.conf
kill -HUP `cat /var/run/proxy.pid`

/usr/local/nginx/sbin/nginx -t
/usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf
kill -HUP `cat /var/run/nginx.pid`