所有的TCP/IP调优参数都位于/proc/sys/net/目录. 例如, 下面是最重要的一些调优参数, 后面是它们的含义:

1. /proc/sys/net/core/rmem_max ― 最大的TCP数据接收缓冲

2. /proc/sys/net/core/wmem_max ― 最大的TCP数据发送缓冲

3. /proc/sys/net/ipv4/tcp_timestamps ― 时间戳在(请参考RFC 1323)TCP的包头增加12个字节

4. /proc/sys/net/ipv4/tcp_sack ― 有选择的应答

5. /proc/sys/net/ipv4/tcp_window_scaling ― 支持更大的TCP窗口. 如果TCP窗口最大超过65535(64K), 必须设置该数值为1

6. rmem_default ― 默认的接收窗口大小

7. rmem_max ― 接收窗口的最大大小

8. wmem_default ― 默认的发送窗口大小

9. wmem_max ― 发送窗口的最大大小

/proc目录下的所有内容都是临时性的, 所以重启动系统后任何修改都会丢失.

建议在系统启动时自动修改TCP/IP参数:

把下面代码增加到/etc/rc.local文件, 然后保存文件, 系统重新引导的时候会自动修改下面的TCP/IP参数:

echo 256960 > /proc/sys/net/core/rmem_default

echo 256960 > /proc/sys/net/core/rmem_max

echo 256960 > /proc/sys/net/core/wmem_default

echo 256960 > /proc/sys/net/core/wmem_max

echo 0 > /proc/sys/net/ipv4/tcp_timestamps

echo 1 > /proc/sys/net/ipv4/tcp_sack

echo 1 > /proc/sys/net/ipv4/tcp_window_scaling

TCP/IP参数都是自解释的, TCP窗口大小设置为256960, 禁止TCP的时间戳(取消在每个数据包的头中增加12字节), 支持更大的TCP窗口和TCP有选择的应答。

上面数值的设定是根据互连网连接和最大带宽/延迟率来决定.

注: 上面实例中的数值可以实际应用, 但它只包含了一部分参数.

另外一个方法: 使用 /etc/sysctl.conf 在系统启动时将参数配置成您所设置的值:

net.core.rmem_default = 256960

net.core.rmem_max = 256960

net.core.wmem_default = 256960

net.core.wmem_max = 256960

net.ipv4.tcp_timestamps = 0

net.ipv4.tcp_sack =1

net.ipv4.tcp_window_scaling = 1

----------------------------------------------------------------

/proc/sys/fs/super-max

该文件指定超级块处理程序的最大数目。挂装的任何文件系统需要使用超级块，所以如果挂装了大量文件系统，则可能会用尽超级块处理程序。

缺省设置：256

/proc/sys/fs/super-nr

该文件显示当前已分配超级块的数目。该文件是只读的，仅用于显示信息。

/proc/sys/kernel

/proc/sys/kernel/acct

该文件有三个可配置值，根据包含日志的文件系统上可用空间的数量（以百分比表示），这些值控制何时开始进行进程记帐：

如果可用空间低于这个百分比值，则停止进程记帐

如果可用空间高于这个百分比值，则开始进程记帐

检查上面两个值的频率（以秒为单位）

要更改这个文件的某个值，应该回送用空格分隔开的一串数字。

缺省设置：2 4 30

如果包含日志的文件系统上只有少于 2% 的可用空间，则这些值会使记帐停止，如果有 4% 或更多可用空间，则再次启动记帐。每 30 秒做一次检查。

/proc/sys/kernel/ctrl-alt-del

该文件有一个二进制值，该值控制系统在接收到 ctrl+alt+delete 按键组合时如何反应。这两个值表示：

零（0）值表示捕获 ctrl+alt+delete，并将其送至 init 程序。这将允许系统可以完美地关闭和重启，就好象您输入 shutdown 命令一样。

壹（1）值表示不捕获 ctrl+alt+delete，将执行非干净的关闭，就好象直接关闭电源一样。

缺省设置：0

/proc/sys/kernel/domainname

该文件允许您配置网络域名。它没有缺省值，也许已经设置了域名，也许没有设置。

/proc/sys/kernel/hostname

该文件允许您配置网络主机名。它没有缺省值，也许已经设置了主机名，也许没有设置。

/proc/sys/kernel/msgmax

该文件指定了从一个进程发送到另一个进程的消息的最大长度。进程间的消息传递是在内核的内存中进行，不会交换到磁盘上，所以如果增加该值，则将增加操作系统所使用的内存数量。

缺省设置：8192

/proc/sys/kernel/msgmnb

该文件指定在一个消息队列中最大的字节数。

缺省设置：16384

/proc/sys/kernel/msgmni

该文件指定消息队列标识的最大数目。

缺省设置：16

/proc/sys/kernel/panic

该文件表示如果发生“内核严重错误（kernel panic）”，则内核在重新引导之前等待的时间（以秒为单位）。零（0）秒设置在发生内核严重错误时将禁止重新引导。

缺省设置：0

/proc/sys/kernel/printk

该文件有四个数字值，它们根据日志记录消息的重要性，定义将其发送到何处。关于不同日志级别的更多信息，请阅读 syslog(2) 联机帮助页。该文件的四个值为：

控制台日志级别：优先级高于该值的消息将被打印至控制台

缺省的消息日志级别：将用该优先级来打印没有优先级的消息

最低的控制台日志级别：控制台日志级别可被设置的最小值（最高优先级）

缺省的控制台日志级别：控制台日志级别的缺省值

缺省设置：6 4 1 7

/proc/sys/kernel/shmall

该文件是在任何给定时刻系统上可以使用的共享内存的总量（以字节为单位）。

缺省设置：2097152

/proc/sys/kernel/shmax

该文件指定内核所允许的最大共享内存段的大小（以字节为单位）。

缺省设置：33554432

/proc/sys/kernel/shmmni

该文件表示用于整个系统共享内存段的最大数目。

缺省设置：4096

/proc/sys/kernel/sysrq

如果该文件指定的值为非零，则激活 System Request Key。

缺省设置：0

/proc/sys/kernel/threads-max

该文件指定内核所能使用的线程的最大数目。

缺省设置：2048

/proc/sys/net

/proc/sys/net/core/message_burst

写新的警告消息所需的时间（以 1/10 秒为单位）；在这个时间内所接收到的其它警告消息会被丢弃。这用于防止某些企图用消息“淹没”您系统的人所使用的拒绝服务（Denial of Service）攻击。

缺省设置：50（5 秒）

/proc/sys/net/core/message_cost

该文件存有与每个警告消息相关的成本值。该值越大，越有可能忽略警告消息。

缺省设置：5

/proc/sys/net/core/netdev_max_backlog

该文件指定了，在接口接收数据包的速率比内核处理这些包的速率快时，允许送到队列的数据包的最大数目。

缺省设置：300

/proc/sys/net/core/optmem_max

该文件指定了每个套接字所允许的最大缓冲区的大小。

/proc/sys/net/core/rmem_default

该文件指定了接收套接字缓冲区大小的缺省值（以字节为单位）。

/proc/sys/net/core/rmem_max

该文件指定了接收套接字缓冲区大小的最大值（以字节为单位）。

/proc/sys/net/core/wmem_default

该文件指定了发送套接字缓冲区大小的缺省值（以字节为单位）。

/proc/sys/net/core/wmem_max

该文件指定了发送套接字缓冲区大小的最大值（以字节为单位）。

/proc/sys/net/ipv4

所有 IPv4 和 IPv6 的参数都被记录在内核源代码文档中。请参阅文件 /usr/src/linux/Documentation/networking/ip-sysctl.txt。

/proc/sys/net/ipv6

同 IPv4。

/proc/sys/vm

/proc/sys/vm/buffermem

该文件控制用于缓冲区内存的整个系统内存的数量（以百分比表示）。它有三个值，通过把用空格相隔的一串数字写入该文件来设置这三个值。

用于缓冲区的内存的最低百分比

如果发生所剩系统内存不多，而且系统内存正在减少这种情况，系统将试图维护缓冲区内存的数量。

用于缓冲区的内存的最高百分比

缺省设置：2 10 60

/proc/sys/vm/freepages

该文件控制系统如何应对各种级别的可用内存。它有三个值，通过把用空格相隔的一串数字写入该文件来设置这三个值。

如果系统中可用页面的数目达到了最低限制，则只允许内核分配一些内存。

如果系统中可用页面的数目低于这一限制，则内核将以较积极的方式启动交换，以释放内存，从而维持系统性能。

内核将试图保持这个数量的系统内存可用。低于这个值将启动内核交换。

缺省设置：512 768 1024

/proc/sys/vm/kswapd

该文件控制允许内核如何交换内存。它有三个值，通过把用空格相隔的一串数字写入该文件来设置这三个值：

内核试图一次释放的最大页面数目。如果想增加内存交换过程中的带宽，则需要增加该值。

内核在每次交换中试图释放页面的最少次数。

内核在一次交换中所写页面的数目。这对系统性能影响最大。这个值越大，交换的数据越多，花在磁盘寻道上的时间越少。然而，这个值太大会因“淹没”请求队列而反过来影响系统性能。

缺省设置：512 32 8

/proc/sys/vm/pagecache

该文件与 /proc/sys/vm/buffermem 的工作内容一样，但它是针对文件的内存映射和一般高速缓存。

使内核设置具有持久性

这里提供了一个方便的实用程序，用于更改 /proc/sys 目录下的任何内核参数。它使您可以更改运行中的内核（类似于上面用到的 echo 和重定向方法），但它还有一个在系统引导时执行的配置文件。这使您可以更改运行中的内核，并将这些更改添加到配置文件，以便于在系统重新引导之后，这些更改仍然生效。

该实用程序称为 sysctl，在 sysctl(8) 的联机帮助页中，对这个实用程序进行了完整的文档说明。sysctl 的配置文件是 /etc/sysctl.conf，可以编辑该文件，并在 sysctl.conf(8) 下记录了该文件。sysctl 将 /proc/sys 下的文件视为可以更改的单个变量。所以，以 /proc/sys 下的文件 /proc/sys/fs/file-max 为例，它表示系统中所允许的文件句柄的最大数目，这个文件被表示成 fs.file-max。

这个示例揭示了 sysctl 表示法中的一些奇妙事情。由于 sysctl 只能更改 /proc/sys 目录下的变量，并且人们始终认为变量是在这个目录下，因此省略了变量名的那一部分（/proc/sys）。另一个要说明的更改是，将目录分隔符（正斜杠 /）换成了英文中的句号（点 .）。

将 /proc/sys 中的文件转换成 sysctl 中的变量有两个简单的规则：

去掉前面部分 /proc/sys。

将文件名中的正斜杠变为点。

这两条规则使您能将 /proc/sys 中的任一文件名转换成 sysctl 中的任一变量名。一般文件到变量的转换为：

/proc/sys/dir/file --> dir.file

dir1.dir2.file --> /proc/sys/dir1/dir2/file

可以使用命令 sysctl -a 查看所有可以更改的变量和其当前设置。

用 sysctl 还可以更改变量，它所做的工作与上面所用的 echo 方法完全一样。其表示法为：

sysctl -w dir.file="value"

还是用 file-max 作为示例，使用下面两种方法中的一种将该值更改为 16384。