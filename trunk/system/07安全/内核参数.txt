# Network Optimize
net.ipv4.tcp_tw_reuse = 1
net.ipv4.tcp_tw_recycle = 1
net.ipv4.tcp_keepalive_time = 300
net.ipv4.tcp_fin_timeout = 30
net.core.netdev_max_backlog = 3000
net.ipv4.ip_local_port_range = 5000    65000

# For Security
net.ipv4.conf.eth0.rp_filter = 1
net.ipv4.conf.eth0.log_martians = 1
net.ipv4.conf.eth0.accept_redirects = 0
net.ipv4.conf.eth0.accept_source_route = 0

# Prevent DOS
#net.ipv4.tcp_syncookies = 1
#net.ipv4.tcp_syn_retries = 1
#net.ipv4.tcp_synack_retries = 1
#net.ipv4.tcp_max_syn_backlog = 8192

# IP CONNTRACK TCP TIMEOUT ESTABLISHED(Linux 2.6)
net.ipv4.netfilter.ip_conntrack_tcp_timeout_established = 30

# For LVS
net.ipv4.conf.all.arp_ignore = 1
net.ipv4.conf.eth0.arp_ignore = 1
net.ipv4.conf.all.arp_announce = 2
net.ipv4.conf.eth0.arp_announce = 2
net.ipv4.conf.lo.rp_filter = 0


注解（对应 proc 文件）：
网络优化
/proc/sys/net/ipv4/tcp_tw_reuse
是否允许重新应用处于 TIME-WAIT 状态的 sockets 用于新的 TCP 连接。
/proc/sys/net/ipv4/tcp_tw_recycle
加速 TIME-WAIT sockets 回收。
/proc/sys/net/ipv4/tcp_keepalive_time
当 keepalive 启用时， TCP 发送 keepalive 消息的频度，默认 2 小时。
/proc/sys/net/ipv4/tcp_fin_timeout
最佳值和 BSD 一样为 30 。
/proc/sys/net/core/netdev_max_backlog
接口接收数据包的速率比内核处理这些包的速率快时，允许送到队列的数据包的最大数目。 Redhat9, RHEL4 默认 300 ， RHEL5 默认 1000 。
/proc/sys/net/ipv4/ip_local_port_range
向外连接的端口范围


网络安全
/proc/sys/net/ipv4/conf/<interfacename>/rp_filter
逆向路径过滤 (Reverse Path Filtering) ，可防止 IP 欺骗。
/proc/sys/net/ipv4/conf/<interfacename>/log_martians
记录到系统日志。
/proc/sys/net/ipv4/conf/<interfacename>/accept_redirects
是否接收重定向 icmp 信息。非网关主机应关闭。
/proc/sys/net/ipv4/<interfacename>/accept_source_route
是否接收含有源路由信息的 IP 包。非网关主机应关闭。


抵御 syn flood 攻击，平时应使用默认值
/proc/sys/net/ipv4/tcp_syncookies
SYN Cookie
/proc/sys/net/ipv4/tcp_syn_retries
外向 syn 握手重试次数，默认 4 。
/proc/sys/net/ipv4/tcp_synack_retries
syn-ack 握手状态重试次数，默认 5 。
/proc/sys/net/ipv4/tcp_max_syn_backlog
syn 队列，默认 1024 。


防止 ip_conntrack 表满
/proc/sys/net/ipv4/netfilter/ip_conntrack_tcp_timeout_established
Linux 2.6 以上内核的 ip_conntrack 记录了 TCP ESTABLISHED 连接，而超时时间默认为 5 天。较大访问量可能会填满 ip_conntrack 表，造成网络丢包。
通过
cat /proc/sys/net/ipv4/ip_conntrack_max
wc -l /proc/net/ip_conntrack
确定合适的超时时间。
如果 Web Server 设置了 keepalive time ，与其设置一致，可以达到监控目的。
查看目前 ip_conntrack buffer 使用情况：
grep conn /proc/slabinfo
结果示例：
# name            <active_objs> <num_objs> <objsize> <objperslab> <pagesperslab>
ip_conntrack        7844  10800    384   10    1
分别为：当前活动对象数 可用总数 每个对象字节数 已分配页总数 每个slab的页数


LVS 的内核设置
