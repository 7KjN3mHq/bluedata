mysql master / nfs backup node:
eth0 10.36.88.150

nfs master / mysql backup node:
eth0 10.36.88.152

apt-get install nfs-kernel-server
/etc/init.d/nfs-kernel-server stop
sysv-rc-conf nfs-kernel-server off

vi /etc/default/nfs-kernel-server
RPCNFSDCOUNT=32

vi /etc/exports
/data 10.36.88.128/26(rw,no_root_squash,async,no_subtree_check)


apt-get install lvm2

pvcreate /dev/sda7 /dev/sdb /dev/sdc /dev/sdd
vgcreate vg /dev/sda7 /dev/sdb /dev/sdc /dev/sdd
lvcreate -L 250GB -n mysql vg
lvcreate -l 111124 -n data vg


apt-get install drbd8-utils
vi /etc/drbd.d/global_common.conf
global {
        usage-count no;
        # minor-count dialog-refresh disable-ip-verification
}

common {
        protocol C;

        handlers {
                # pri-on-incon-degr "/usr/lib/drbd/notify-pri-on-incon-degr.sh; /usr/lib/drbd/notify-emergency-reboot.sh; echo b > /proc/sysrq-trigger ; reboot -f";
                # pri-lost-after-sb "/usr/lib/drbd/notify-pri-lost-after-sb.sh; /usr/lib/drbd/notify-emergency-reboot.sh; echo b > /proc/sysrq-trigger ; reboot -f";
                # local-io-error "/usr/lib/drbd/notify-io-error.sh; /usr/lib/drbd/notify-emergency-shutdown.sh; echo o > /proc/sysrq-trigger ; halt -f";
                # fence-peer "/usr/lib/drbd/crm-fence-peer.sh";
                # split-brain "/usr/lib/drbd/notify-split-brain.sh root";
                # out-of-sync "/usr/lib/drbd/notify-out-of-sync.sh root";
                # before-resync-target "/usr/lib/drbd/snapshot-resync-target-lvm.sh -p 15 -- -c 16k";
                # after-resync-target /usr/lib/drbd/unsnapshot-resync-target-lvm.sh;
        }

        startup {
                wfc-timeout 0;
                degr-wfc-timeout 120;
                # wfc-timeout degr-wfc-timeout outdated-wfc-timeout wait-after-sb
        }

        disk {
                on-io-error detach;
                # on-io-error fencing use-bmbv no-disk-barrier no-disk-flushes
                # no-disk-drain no-md-flushes max-bio-bvecs
        }

        net {
                timeout 60;
                connect-int 10;
                ping-int 10;
                max-buffers 2048;
                max-epoch-size 2048;
                after-sb-0pri discard-older-primary;
                after-sb-1pri call-pri-lost-after-sb;
                after-sb-2pri call-pri-lost-after-sb;
                # sndbuf-size rcvbuf-size timeout connect-int ping-int ping-timeout max-buffers
                # max-epoch-size ko-count allow-two-primaries cram-hmac-alg shared-secret
                # after-sb-0pri after-sb-1pri after-sb-2pri data-integrity-alg no-tcp-cork
        }

        syncer {
                rate 1000M;
                # rate after al-extents use-rle cpu-mask verify-alg csums-alg
        }
}

注解：
usage-count no;    # 是否参加 DRBD 使用者统计，默认是 yes
protocol C;    # 使用协议 C 复制模式
在系统出现什么故障时主服务器采取什么操作，例如重启或挂起：
pri-on-incon-degr "/usr/lib/drbd/notify-pri-on-incon-degr.sh; /usr/lib/drbd/notify-emergency-reboot.sh; echo b > /proc/sysrq-trigger ; reboot -f";
pri-lost-after-sb "/usr/lib/drbd/notify-pri-lost-after-sb.sh; /usr/lib/drbd/notify-emergency-reboot.sh; echo b > /proc/sysrq-trigger ; reboot -f";
local-io-error "/usr/lib/drbd/notify-io-error.sh; /usr/lib/drbd/notify-emergency-shutdown.sh; echo o > /proc/sysrq-trigger ; halt -f";
degr-wfc-timeout 120;    # 启动时连接其他节点的超时时间
on-io-error detach;    # 当磁盘有错误时不连接
下面三行一定程度能防止脑裂问题：
after-sb-0pri discard-older-primary;
after-sb-1pri call-pri-lost-after-sb;
after-sb-2pri call-pri-lost-after-sb;
或下面三行也可以：
after-sb-0pri discard-zero-changes;
after-sb-1pri discard-secondary;
after-sb-2pri disconnect;
rate 1000M;    # 复制时的网络速度限制，单位 bits ，填最大带宽，会自动 * 0.3 得到实际速度，避免 syncer 抢占服务所需的带宽

vi /etc/drbd.d/mysql.res
resource mysql {
  on db1 {
      device    /dev/drbd0;
      disk      /dev/vg/mysql;
      address   10.36.88.150:7788;
      meta-disk internal;
  }
  on db2 {
      device    /dev/drbd0;
      disk      /dev/vg/mysql;
      address   10.36.88.152:7788;
      meta-disk internal;
  }
}

vi /etc/drbd.d/data.res
resource data {
  on db1 {
      device    /dev/drbd1;
      disk      /dev/vg/data;
      address   10.36.88.150:7789;
      meta-disk internal;
  }
  on db2 {
      device    /dev/drbd1;
      disk      /dev/vg/data;
      address   10.36.88.152:7789;
      meta-disk internal;
  }
}

两台机器都执行：
drbdadm create-md mysql
drbdadm create-md data

两台机器都启动：
/etc/init.d/drbd start

在 mysql master 节点上：
drbdadm adjust mysql
drbdsetup /dev/drbd0 primary -o
mkfs -t ext4 /dev/drbd0
mount -t ext4 -o rw,noatime,nodiratime /dev/drbd0 /mysql

在 nfs master 节点上：
drbdadm adjust data
drbdsetup /dev/drbd1 primary -o
mkfs -t ext4 /dev/drbd1
mount -t ext4 -o rw,noatime,nodiratime /dev/drbd1 /data

查看状态：
/etc/init.d/drbd status


安装 MySQL
http://www.percona.com/doc/percona-server/5.5/installation/apt_repo.html
apt-get install percona-server-server-5.5 percona-server-client-5.5
/etc/init.d/mysql stop
sysv-rc-conf mysql off
rm -f /var/lib/mysql/ib*
mv /var/lib/mysql/* /mysql/
chown mysql:mysql /mysql
grep -Ev "^$|#" /usr/share/mysql/my-innodb-heavy-4G.cnf > /etc/mysql/my.cnf
vi /etc/mysql/my.cnf
pid-file        = /var/run/mysqld/mysqld.pid
log-error       = /var/log/mysql/err.log
datadir         = /mysql
connect_timeout = 15
wait_timeout = 3600
max_connections = 500
max_connect_errors = 1844674407370954751
max_heap_table_size = 256M
default-storage-engine = INNODB
tmp_table_size = 256M
log-bin=/var/lib/mysql/binlog
log-bin-index=/var/lib/mysql/binlog.index
long_query_time = 0.25
slow_query_log_file = /var/log/mysql/slow.log
innodb_file_per_table
innodb_buffer_pool_size = 12G
innodb_flush_method = O_DIRECT
innodb_flush_log_at_trx_commit = 2
innodb_log_buffer_size = 4M

再用 mysql master node 的 /etc/mysql/debian.cnf 文件替换另一个主机的。


heartbeat 配置：
apt-get install heartbeat
cd /etc/ha.d
vi authkeys
auth 1
1 crc

chmod 600 authkeys

vi ha.cf
mysql master node:
ucast eth0 10.36.88.152
auto_failback off
node db1
node db2
respawn hacluster /usr/lib/heartbeat/ipfail

nfs master node:
ucast eth0 10.36.88.150
auto_failback off
node db1
node db2

#ping 10.36.64.1
#respawn hacluster /usr/lib/heartbeat/ipfail

两台服务器的 /etc/hosts 中都要配置好 ip / hostname 的对应关系。


初次启动时：
vi haresources
db1 \  ## 另一个节点修改为 db2
IPaddr::10.36.64.2/26/eth0 \
IPaddr::10.36.64.3/26/eth0 \
drbddisk::mysql \
drbddisk::data \
Filesystem::/dev/drbd0::/mysql::ext4::rw,noatime,nodiratime \
Filesystem::/dev/drbd1::/data::ext4::rw,noatime,nodiratime \
mysql \
nfs-kernel-server

手动切换资源的脚本：
mysql master node:
vi mysql-start.sh
#!/bin/sh
PATH=$PATH:/etc/ha.d/resource.d
drbddisk mysql start
Filesystem /dev/drbd0 /mysql ext4 rw,noatime,nodiratime start
IPaddr 10.36.64.2/26/eth0 start
/etc/init.d/mysql start

vi nfs-stop.sh
#!/bin/sh
PATH=$PATH:/etc/ha.d/resource.d
/etc/init.d/nfs-kernel-server stop
IPaddr 10.36.64.3/26/eth0 stop
Filesystem /dev/drbd1 /data ext4 rw,noatime,nodiratime stop
drbddisk data stop


nfs master node:
vi nfs-start.sh
#!/bin/sh
PATH=$PATH:/etc/ha.d/resource.d
drbddisk data start
Filesystem /dev/drbd1 /data ext4 rw,noatime,nodiratime start
IPaddr 10.36.64.3/26/eth0 start
/etc/init.d/nfs-kernel-server start

vi mysql-stop.sh
#!/bin/sh
PATH=$PATH:/etc/ha.d/resource.d
/etc/init.d/mysql stop
IPaddr 10.36.64.2/26/eth0 stop
Filesystem /dev/drbd0 /mysql ext4 rw,noatime,nodiratime stop
drbddisk mysql stop


其它：
nfs 客户端安装：
nfs-common portmap

写操作测速
dd if=/dev/zero of=test bs=1024k count=4k

读操作测速
dd if=test of=/dev/null


数据库连接测试：
mysql -e "show variables like 'hostname'" | grep hostname | awk '{print $2}'