为最坏的情况做准备
设计一个灾难恢复计划
第一步：对可接受和不可接受的损失进行定义
        对数据进行分类
                 给数据给予一个金钱价值
                 权衡代价
第二步：备份一切
                 选择排除列表，不要包含列表
                 数据库
                 备份的备份
                 元数据
第三步：组织一切
                 标准化的服务器/磁盘布局
                                       根磁盘
                                      相同大小的磁盘
                                      相同功能的磁盘
                                      数据库数据磁盘
                                      应用程序磁盘
                 介质组织
                                      惟一字母数字卷序列号
                                      用于跟踪卷序列号、名字、类型、使用日期、地点、以及临时借出情况的数据库
                                     条形码系统
                                     正确的存储介质
                                     温度和湿度
                                     物理安全
                                     抽样调查和全面清查
                 把电子文档放在一个地方
                                     从一个系统布局程序中的输出
                                     过程
                                     文档的备份
                                     确保阅读器在卷上
第四步：防备灾难
         保护介质和文档
                      现场保险库系统
                     异地存储公司
         保护业务
第五步：文档化
         HTML PDF word 纸张拷贝
第六步：测试，测试，再测试
         要有一个外行测试过程
         空想灾难
         每6个月进行一次全面测试
         灾难恢复公司需要一个测试

全部进行备份
        备份对你的公司来说有多重要
         数据丢失会让你付出什么代价
                 损失客户
                 订单
                 士气
                 形象
                 预算
                 时间
         停机时间会让你付出什么代价
                 客户感觉
                 雇员感觉
决定备份什么
         为最坏情况作打算
         进行一次清查
                 为备份做备份
                 你有什么外围设备
                 他们的分区情况如何
                 你的卷管理器是如何分配的
                你的数据库是如何设置的
                 你的NFS，NIS，DHCP以及其他设置有文档吗？
                 你有针对于此的计划吗
                 你要知道你的机器里有些什么
         你正在备份你认为你正在备份的东西吗
         备份全部系统还算其中的一部分
                 只备份选择过的文件系统
                        节省介质空间和网络流量
                        管理更困难
                        容易划分卷
                        写一个脚本进行工作
                        最糟糕的事情：你忽视了什么东西         
决定何时备份
                      备份级别
                       运行哪级备份以及何时进行
                       午夜时间
                                     完整性
                                       速度
决定如何备份
               全部做好准备：十种类型的灾难
                       用户错误
                       系统成员错误
                       硬件故障
                       磁盘驱动器故障
                       系统因素的故障
                       软件故障
                       电子入侵、故意破坏、以及小偷
                       自然灾难
                       其他灾难
                       存档信息
                   高可靠性及灾难恢复能力
                       自动化备份
                       计划扩展
                       不要忘记mtime,atime,ctime
                   简单就是美
存储备份
                  本地存储
                  异地存储
测试备份
                   测试一切
                   测试频度
监视备份
 

＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃
重要摘要
＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃
你需要有良好文档化的如何做每件事的过程，其范围包括从每日系统管理到如何重新建立你最重要的服务器。

灾难恢复黄页：记录可以进行灾难恢复的公司的联系方式，紧急通讯服务，火灾恢复，紧急医药服务，紧急设备提供等。

备份常常不是在系统设计期间给予考虑的。当购买了一个新服务器时，会有人问到：”这对于当前的备份方法有影响吗？“

你曾经尝试过找到负责备份的人吗？
我们怎么能让一个如此低资历的人做如此重要的事情？
＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃
你必须不断地问自己的六个问题是：为什么,是什么，何时，何地，谁，如何
为什么？
为什么你要保护自己免于灾难？如果你丢失了数据，那会真有问题吗？损失会是什么？
是什么？
你将备份的是什么－－所有的东西还算仅仅经过选择的文件系统？并且，除了普通文件系统，还有什么应该包括在备份之中。
何时？
何时是你备份系统的最佳时间？你多长时间进行一次完全备份？何时应该进行一次增量备份？
何地？
备份在哪里发生？存放备份卷的最佳地点在哪里？
谁？
谁将提供硬件，软件以及安装服务以把系统搭建起来？
如何？
如何把它完成？
＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃
一些让人头痛的问题？
昨夜的备份防到哪一个卷上了？你把它存放在哪里了？如何与异地厂商联系以提取我的备份卷的拷贝？爆炸的系统中有多少磁盘？他们是什么模型？他们是怎么分区的？上周你在系统安装了内核补丁是吗？你做了一个完全备份是吗？你知道灾难前哪个用户拥有哪些驱动器吗？哪些磁盘也是他们的？如果恢复根驱动器和从新安装系统，你将如何知道数据库用户具有什么UID？

误删除文件：快照技术

一个自满的掌管备份的家伙是非常危险的。

磁盘驱动器故障：raid 5备份

请对你的系统进行正确的文档化。使用系统日志以及任何其他监视方法密切关注你的系统。

进行不断的快照所真正能够保护你自己免遭因为软件故障而引起的数据损失的唯一方法。

当你意识到一个非常重要的但是很少使用的文件丢失了的时候，我想你陷入了可怕的麻烦中了。

管理员使用ctime来查找黑客

备份会改变atime，atime可以被重置。

备份方案越复杂，它就越有可能失败。如果你不能在几个小时之内把你的备份对一个陌生人讲明白，那么明显，这个方案可能过于复杂。你应该考虑一下实现一些诸如集中日志，标准化备份脚本以及某种程度的自动化之类的东西。

请把备份卷组织好！给它们贴上标签，分好类别，赋上统一的名字或编号并且按照顺序把它们放在存储容器里。对你来说，恢复工作的顺利与否将同介质组织的好坏直接相关。
＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃
12 000个金币（如何管理12 000个备份介质）
作者工作过的一个金融机构有超过12 000个之多的介质，他们一个都没有丢失过。他们如何做到的？他们的存储系统构建于下列的基础之上：
每个卷都有一个统一数字标识符
这个数字贴在每个卷上
每个卷的编号，名字，目的，介质类型，所使用的数据以及存放地点等信息都保存在一个informix数据库中
每个卷的移动情况都通过数据进行跟踪。例如借出或拿去进行恢复时，进行记录
如果介质只是从介质库中拿走一会儿用于恢复，那么使用一个手工日志就可以了。对于那些每天进行的大量卷移动来说，我们则使用一个条形码扫描仪和一个shell脚本来自动更新数据库。
我们每个季度进行一次彻底清查，每个月进行一次抽样清查，如果一次抽样清查中遇到很多错误，那么就要进行一次彻底清查。
在清查过程中，我们把每个卷都同数据库的一个打印输出进行比较并且输出中的每一项都同一个实际卷进行比较。
卷都放在wrightline介质柜中并且全部上锁。只有备份操作员才能够存取这些卷
清查自称“自审计”。除此之外，专门的审计部门还要进行一年一次的内部审计
整个过程完全文档化。
＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃
如果你要测试文件系统备份，请保证：
恢复许多单一的文件
恢复一个版本更老的文件
恢复整个文件，并且把结果同原始情况进行比较。它们大小相同吗？其他方面呢？
假设整个系统崩溃了，重新创建它
假设某个卷坏了，可强迫自己使用一个替代卷
从你的异地存储商处提取一些卷
假设你的备份服务器被损坏了，可尝试进行恢复
如果你要测试数据库恢复，请保证：
假设你只丢失了一个数据文件或磁盘驱动器，恢复部分数据
把整个数据库恢复到另外一台机器，这一步中，你会找出自己没有包括的文件
把数据库提供到比提供时间稍早的一个时间。
假设你的备份失效了，强迫自己使用一个更旧的备份。

＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃
每个备份都应该有一个日志，该日志要每天检查。日志要显示一个总结，显示任何异常信息。

每次当人类进入一种平衡状态时，事情总会出错。

备份和恢复应该被良好文档化到这种程度：在没有你的情况下，任何系统管理员都能够一步一步地遵循它们进行工作。这是进行文档测试的一个最好的方法－－让别人来尝试使用它。

文档也是一个让你的内部客户知道你正在做什么的最好方法。

做一个正式的报告书：
总结
         这一项应该有一页。
概览部分
         请使用大量的段标题，这可以使读者能够快速阅读本部分。
技术规范