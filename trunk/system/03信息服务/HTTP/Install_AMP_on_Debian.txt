Debian GNU/Linux 5.0

apt-get install php5
会安装所依赖的 apache2

The following NEW packages will be installed:
  apache2-mpm-prefork apache2-utils apache2.2-common file libapache2-mod-php5
  libapr1 libaprutil1 libdb4.5 libexpat1 libmagic1 libmysqlclient15off
  libpcre3 libpq5 libsqlite3-0 libxml2 mime-support mysql-common
  openssl-blacklist php5 php5-common python python-minimal python2.5
  python2.5-minimal sgml-base ssl-cert ucf xml-core

vi /etc/php5/apache2/php.ini
max_execution_time = 5
memory_limit = 8M
default_socket_timeout = 10
mysql.allow_persistent = Off
mysql.connect_timeout = 10
session.gc_maxlifetime = 3600
session.bug_compat_42 = 0
session.bug_compat_warn = 0

# Install ZendOptimizer
tar zxvf ZendOptimizer-3.3.3-linux-glibc23-x86_64.tar.gz
cd ZendOptimizer-3.3.3-linux-glibc23-x86_64
./install
cd ..

cd /etc/php5/apache2
mv php.ini-zend_optimizer.bak php.ini

vi /etc/php5/conf.d/zend_optimizer.ini
zend_optimizer.optimization_level=1023
zend_extension_manager.optimizer=/usr/local/Zend/lib/Optimizer-3.3.3
zend_optimizer.version=3.3.3
zend_extension=/usr/local/Zend/lib/ZendExtensionManager.so


# Installing eAccelerator
apt-get install build-essential php5-dev

The following NEW packages will be installed:
  autoconf automake automake1.4 autotools-dev binutils build-essential bzip2
  cpp cpp-4.3 dpkg-dev g++ g++-4.3 gcc gcc-4.3 libc6-dev libgmp3c2 libgomp1
  libltdl3 libltdl3-dev libmpfr1ldbl libssl-dev libstdc++6-4.3-dev
  libtimedate-perl libtool linux-libc-dev m4 make patch php5-dev shtool
  zlib1g-dev

wget http://bart.eaccelerator.net/source/0.9.5.3/eaccelerator-0.9.5.3.tar.bz2
tar xvfj eaccelerator-0.9.5.3.tar.bz2
cd eaccelerator-0.9.5.3
phpize
./configure
make
make install

vi /etc/php5/conf.d/eaccelerator.ini
extension="eaccelerator.so"
eaccelerator.shm_size="16"
eaccelerator.cache_dir="/var/cache/eaccelerator"
eaccelerator.enable="1"
eaccelerator.optimizer="1"
eaccelerator.check_mtime="1"
eaccelerator.debug="0"
eaccelerator.filter=""
eaccelerator.shm_max="0"
eaccelerator.shm_ttl="0"
eaccelerator.shm_prune_period="0"
eaccelerator.shm_only="0"
eaccelerator.compress="1"
eaccelerator.compress_level="9"

mkdir -p /var/cache/eaccelerator
chown -R www-data:www-data /var/cache/eaccelerator


# Configure Apache
vi /etc/apache2/apache2.conf
Timeout 30
KeepAlive Off

ServerLimit         1024
MaxClients          1024

vi /etc/apache2/httpd.conf
<Directory />
Options FollowSymLinks
AllowOverride None
</Directory>


a2enmod include
vi /etc/apache2/mods-enabled/dir.conf
DirectoryIndex 增加 index.shtml
/etc/apache2/mods-enabled/mime.conf 中应该已经有
AddType text/html .shtml
AddOutputFilter INCLUDES .shtml
对目录还需要加上 Options +Includes


a2enmod rewrite
a2ensite nvkan

a2enmod deflate
vi /etc/apache2/mods-enabled/deflate.conf
<IfModule mod_deflate.c>
          DeflateCompressionLevel 9
          AddOutputFilterByType DEFLATE text/html text/plain text/xml
          AddOutputFilter DEFLATE css js
</IfModule>


设置缓存
http://www.php-oa.com/2008/08/27/headers.html
a2enmod headers expires
vi /etc/apache2/httpd.conf
# Turn on Expires and set default expires to 3 days
ExpiresActive On
ExpiresDefault A259200

# Set up caching on media files for 1 month
<FilesMatch "\.(ico|gif|jpg|jpeg|png|flv|pdf|swf|mov|mp3|wmv|ppt)$">
ExpiresDefault A2419200
Header append Cache-Control "public"
</FilesMatch>

# Set up 2 Hour caching on commonly updated files
<FilesMatch "\.(xml|txt|html|js|css|shtml)$">
ExpiresDefault A7200
Header append Cache-Control "private, must-revalidate"
</FilesMatch>

# Force no caching for dynamic files
<FilesMatch "\.(php|cgi|pl)$">
ExpiresDefault A0
Header set Cache-Control "no-store, no-cache, must-revalidate, max-age=0"
Header set Pragma "no-cache"
</FilesMatch>


apt-get install cronolog
vi /etc/apache2/apache2.conf
#ErrorLog /var/log/apache2/error.log
ErrorLog "|/usr/bin/cronolog /var/log/apache2/error_log.%Y%m%d"
#CustomLog /var/log/apache2/other_vhosts_access.log vhost_combined
CustomLog "|/usr/bin/cronolog /var/log/apache2/access_log.%Y%m%d" combined


mod_encoding 解决 URL 中文编码问题
apt-get install libapache2-mod-encoding
a2enmod encoding
vi /etc/apache2/httpd.conf
<IfModule mod_headers.c>
Header add MS-Author-Via "DAV"
</IfModule>
<IfModule mod_encoding.c>
EncodingEngine on
NormalizeUsername on
SetServerEncoding GBK
DefaultClientEncoding UTF-8 GBK GB2312
AddClientEncoding "(Microsoft .* DAV $)" UTF-8 GBK GB2312
AddClientEncoding "Microsoft .* DAV" UTF-8 GBK GB2312
AddClientEncoding "Microsoft-WebDAV*" UTF-8 GBK GB2312
</IfModule>


vi /etc/apache2/sites-enabled/000-default
#ServerAdmin webmaster@localhost
#ErrorLog /var/log/apache2/error.log
#LogLevel warn
#CustomLog /var/log/apache2/access.log combined
#Allow from 127.0.0.0/255.0.0.0 ::1/128

/etc/init.d/apache2 restart


# MySQL
apt-get install mysql-server

The following NEW packages will be installed:
  bsd-mailx exim4 exim4-base exim4-config exim4-daemon-light libdbd-mysql-perl
  libdbi-perl libhtml-template-perl liblockfile1 libnet-daemon-perl
  libplrpc-perl libterm-readkey-perl mailx mysql-client-5.0 mysql-server
  mysql-server-5.0 psmisc

vi /etc/mysql/my.cnf
datadir         = /data
#bind-address           = 127.0.0.1
skip-name-resolve

key_buffer              = 768M
max_connections        = 256
wait_timeout = 30
interactive_timeout = 30

table_cache            = 512
sort_buffer_size = 2M
read_buffer_size = 2M
read_rnd_buffer_size = 8M
myisam_sort_buffer_size = 512M
thread_concurrency     = 8
query_cache_size        = 512M

log_slow_queries        = /var/log/mysql/mysql-slow.log
long_query_time = 1

skip-innodb


# phpMyAdmin
apt-get install phpmyadmin

The following NEW packages will be installed:
  dbconfig-common defoma fontconfig-config libfontconfig1 libfreetype6
  libgd2-xpm libjpeg62 libmcrypt4 libpng12-0 libt1-5 libxpm4 php5-gd
  php5-mcrypt php5-mysql phpmyadmin ttf-dejavu ttf-dejavu-core
  ttf-dejavu-extra

打开 http://sms.jc001.cn/phpmyadmin/setup/ 添加 Servers

vi /etc/apache2/conf.d/phpmyadmin.conf
#Alias /phpmyadmin /usr/share/phpmyadmin
#</Directory>

# Authorize for setup
#<Directory /usr/share/phpmyadmin/setup>

在允许使用 phpMyAdmin 的虚拟主机加上
Alias /phpmyadmin /usr/share/phpmyadmin

htpasswd -c /etc/phpmyadmin/htpasswd.setup admin