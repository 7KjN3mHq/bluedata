以 FPM 模式安装 PHP5.3


软件下载：
PHP5(http://www.php.net/downloads.php):
wget http://www.php.net/get/php-5.3.23.tar.bz2/from/this/mirror -O php-5.3.23.tar.bz2

安装依赖的包：
apt-get install libmysqlclient-dev libgd2-xpm-dev libxml2-dev libcurl4-openssl-dev


安装 PHP5.3:
tar jxvf php-5.3.23.tar.bz2
cd php-5.3.23
./configure \
--prefix=/usr/local/php \
--enable-fpm \
--enable-mbstring \
--enable-sockets \
--with-config-file-path=/usr/local/php/etc \
--with-openssl \
--with-curl \
--with-gd \
--with-jpeg-dir \
--with-png-dir \
--with-freetype-dir \
--with-zlib \
--with-mysql=mysqlnd \
--with-mysqli=mysqlnd \
--with-pdo-mysql=mysqlnd

make
make install

cp php.ini-production /usr/local/php/etc/php.ini
cp -f sapi/fpm/init.d.php-fpm /etc/init.d/php-fpm
chmod 755 /etc/init.d/php-fpm
sysv-rc-conf php-fpm on

一些必备模块的安装：
安装 eAccelerator:
PHP scripts 的缓存，对于提高 PHP 程序执行速度很有帮助。
wget https://github.com/eaccelerator/eaccelerator/tarball/master -O eaccelerator.tar.gz
tar zxvf eaccelerator.tar.gz
cd eaccelerator*
apt-get install autoconf
/usr/local/php/bin/phpize
./configure --enable-eaccelerator=shared --with-php-config=/usr/local/php/bin/php-config
make
make install

安装 ZendOptimizer:
Zend 的优化器，免费使用，如果加密了 PHP 程序文件，这是必须的。
如果没有使用 Zend 优化器，PHP 进程的内存会难以释放。
下载： http://www.zend.com/en/products/guard/downloads
tar zxvf ZendGuardLoader-php-5.3-linux-glibc23-x86_64.tar.gz
cp ZendGuardLoader-php-5.3-linux-glibc23-x86_64/php-5.3.x/ZendGuardLoader.so /usr/local/php/lib/php/extensions/no-debug-non-zts-20090626/

安装 memcache:
下载： http://pecl.php.net/package/memcache
wget http://pecl.php.net/get/memcache-2.2.7.tgz
tar zxvf memcache-2.2.7.tgz
cd memcache-2.2.7
/usr/local/php/bin/phpize
./configure --with-php-config=/usr/local/php/bin/php-config
make
make install

安装 redis 扩展：
下载： https://github.com/nicolasff/phpredis
wget https://github.com/nicolasff/phpredis/zipball/master -O phpredis.zip
apt-get install unzip
unzip phpredis.zip
cd nicolasff-phpredis*
/usr/local/php/bin/phpize
./configure --with-php-config=/usr/local/php/bin/php-config
make
make install

安装 xhprof:
下载： http://pecl.php.net/package/xhprof
wget http://pecl.php.net/get/xhprof-0.9.2.tgz
tar zxvf xhprof-0.9.2.tgz
cd xhprof-0.9.2/extension
/usr/local/php/bin/phpize
./configure --with-php-config=/usr/local/php/bin/php-config
make
make install
复制 web 访问目录到应用的根目录：
cd ..
cp -r xhprof_html xhprof_lib /path/to/project/


PHP5.3 的配置：
vi /usr/local/php/etc/php.ini
# 设置默认时区
date.timezone = UTC
# 开启短标记支持
short_open_tag = On
# session 文件存储目录
session.save_path = "/dev/shm"
# session 过期时间设为一小时
session.gc_maxlifetime = 3600
# 禁用 mysql 长连接
mysql.allow_persistent = Off
mysqli.allow_persistent = Off

# 开启 eAccelerator
[eAccelerator]
zend_extension="/usr/local/php/lib/php/extensions/no-debug-non-zts-20090626/eaccelerator.so"
eaccelerator.shm_size="32"
eaccelerator.cache_dir="/dev/shm"
eaccelerator.enable="1"
eaccelerator.optimizer="1"
eaccelerator.check_mtime="0"
eaccelerator.debug="0"
eaccelerator.filter=""
eaccelerator.shm_max="0"
eaccelerator.shm_ttl="3600"
eaccelerator.shm_prune_period="3600"
eaccelerator.shm_only="1"
eaccelerator.compress="1"
eaccelerator.compress_level="9"
eaccelerator.keys="shm_only"
eaccelerator.sessions="shm_only"
eaccelerator.content="shm_only"
eaccelerator.allowed_admin_path = "/var/www"

要增大 eaccelerator.shm_size 需要修改内核参数共享内存的大小：
echo -ne "
kernel.shmmax = 134217728
" >> /etc/sysctl.conf
sysctl -p

# 在 eAccelerator 之后启用 ZendOptimizer ，避免 eaccelerator.so 不能加载。
[Zend]
zend_extension="/usr/local/php/lib/php/extensions/no-debug-non-zts-20090626/ZendGuardLoader.so"

# 开启 memcache
[Memcache]
extension=memcache.so

# redis 扩展
[Redis]
extension=redis.so

# 开启 Xhprof
[Xhprof]
extension=xhprof.so
xhprof.output_dir = /var/log/php/xhprof


启动 PHP FastCGI
cd /usr/local/php/etc
grep -Ev "^$|;" php-fpm.conf.default > php-fpm.conf
vi php-fpm.conf
全局设置：
[global]
pid = run/php-fpm.pid
error_log = /var/log/php/php-fpm.log
log_level = warning
rlimit_files = 65536

pool 的设置：
[www]
user = www-data
group = www-data
listen = 10.36.88.154:9000
listen.allowed_clients = 127.0.0.1,10.36.88.132,10.36.88.136
pm = dynamic
pm.max_children = 10
pm.start_servers = 3
pm.min_spare_servers = 2
pm.max_spare_servers = 4
pm.max_requests = 200
pm.status_path = /status
slowlog = /var/log/php/www_slow.log
request_slowlog_timeout = 1s
request_terminate_timeout = 60s
rlimit_files = 65536
rlimit_core = unlimited
catch_workers_output = yes
php_admin_value[error_log] = /var/log/php/www_error.log
php_admin_value[memory_limit] = 16M

[admin]
user = www-data
group = www-data
listen = 10.36.88.154:9001
listen.allowed_clients = 127.0.0.1,10.36.88.132,10.36.88.136
pm = dynamic
pm.max_children = 4
pm.start_servers = 2
pm.min_spare_servers = 1
pm.max_spare_servers = 3
pm.max_requests = 100
pm.status_path = /status
slowlog = /var/log/php/admin_slow.log
request_slowlog_timeout = 5s
request_terminate_timeout = 120s
rlimit_files = 65536
rlimit_core = unlimited
catch_workers_output = yes
php_admin_value[error_log] = /var/log/php/admin_error.log
php_admin_value[memory_limit] = 64M

创建相关目录
mkdir -p /var/log/php/xhprof
chown www-data:www-data /var/log/php

ulimit -SHn 65536
/etc/init.d/php-fpm start
修改 php.ini 后重新加载配置文件使用 reload ，可以不重启 PHP FastCGI 进程。

永久增大 Shell 对一个进程打开的文件句柄数量：
echo -ne "
fs.file-max = 65536
" >> /etc/sysctl.conf
sysctl -p

echo -ne "
* soft nofile 65536
* hard nofile 65536
" >> /etc/security/limits.conf


日志回滚
vi /etc/logrotate.d/php-fpm
/var/log/php/*.log {
        daily
        missingok
        rotate 7
        compress
        delaycompress
        notifempty
        create 640 www-data www-data
        sharedscripts
        postrotate
                /etc/init.d/php-fpm reload
        endscript
}