以 FastCGI 模式安装 PHP5


软件下载：
PHP5(http://www.php.net/downloads.php):
wget http://cn.php.net/get/php-5.2.17.tar.bz2/from/this/mirror
mv mirror php-5.2.17.tar.bz2

php-fpm(http://php-fpm.org/downloads/):
wget http://php-fpm.org/downloads/php-5.2.17-fpm-0.5.14.diff.gz


安装依赖的包：
CentOS:
yum install mysql-devel gd-devel libxml2-devel

Debian/Ubuntu:
apt-get install libmysqlclient18-dev libgd2-xpm-dev libxml2-dev libcurl4-openssl-dev


应用 php-fpm 补丁：
tar jxvf php-5.2.17.tar.bz2
gzip -cd php-5.2.17-fpm-0.5.14.diff.gz | patch -d php-5.2.17 -p1


安装 PHP5:
cd php-5.2.17
./configure \
--prefix=/usr/local/php5-fcgi \
--enable-discard-path \
--enable-fastcgi \
--enable-fpm \
--enable-force-cgi-redirect \
--enable-mbstring \
--enable-sockets \
--with-config-file-path=/usr/local/php5-fcgi/etc \
--with-curl \
--with-gd \
--with-jpeg-dir \
--with-png-dir \
--with-freetype-dir \
--with-zlib \
--with-mysql

make
make install

cp -f php.ini-recommended /usr/local/php5-fcgi/etc/php.ini


一些必备模块的安装：
安装 eAccelerator:
PHP scripts 的缓存，对于提高 PHP 程序执行速度很有帮助。
下载： http://sourceforge.net/projects/eaccelerator/
unzip eaccelerator-0.9.6.1.zip
cd eaccelerator-0.9.6.1
/usr/local/php5-fcgi/bin/phpize
./configure --enable-eaccelerator=shared --with-php-config=/usr/local/php5-fcgi/bin/php-config
make
make install

安装 ZendOptimizer:
Zend 的优化器，免费使用，如果加密了 PHP 程序文件，这是必须的。
如果没有使用 Zend 优化器，PHP 进程的内存会难以释放。
下载： http://www.zend.com/en/products/guard/downloads
tar zxvf ZendOptimizer-3.3.9-linux-glibc23-x86_64.tar.gz
cp ZendOptimizer-3.3.9-linux-glibc23-x86_64/data/5_2_x_comp/ZendOptimizer.so /usr/local/php5-fcgi/lib/php/extensions/no-debug-non-zts-20060613/

安装 memcache:
用于操作 Memcached ，应用非常广泛。
下载： http://pecl.php.net/package/memcache
wget http://pecl.php.net/get/memcache-2.2.6.tgz
tar zxvf memcache-2.2.6.tgz
cd memcache-2.2.6
/usr/local/php5-fcgi/bin/phpize
./configure --with-php-config=/usr/local/php5-fcgi/bin/php-config
make
make install


PHP5 的配置：
vi /usr/local/php5-fcgi/etc/php.ini
# 开启短标记支持
short_open_tag = On
# 最大执行时间
max_execution_time = 5
# 最大使用内存
memory_limit = 8M
# 扩展模块的目录
extension_dir = "/usr/local/php5-fcgi/lib/php/extensions/no-debug-non-zts-20060613"
# 关闭 mysql 持久连接。高访问量下会把数据库可用连接用完。
mysql.allow_persistent = Off
# 缩短连接超时时间
mysql.connect_timeout = 10
# session 文件存储目录
session.save_path = "/dev/shm"
# session 过期时间设为一小时
session.gc_maxlifetime = 3600
# 关闭 session.bug_compat_warn
session.bug_compat_warn = 0

# 开启 eAccelerator
[eAccelerator]
zend_extension="/usr/local/php5-fcgi/lib/php/extensions/no-debug-non-zts-20060613/eaccelerator.so"
eaccelerator.shm_size="32"
eaccelerator.cache_dir="/dev/shm"
eaccelerator.enable="1"
eaccelerator.optimizer="1"
eaccelerator.check_mtime="1"
eaccelerator.debug="0"
eaccelerator.filter=""
eaccelerator.shm_max="0"
eaccelerator.shm_ttl="3600"
eaccelerator.shm_prune_period="0"
eaccelerator.shm_only="1"
eaccelerator.compress="1"
eaccelerator.compress_level="9"
eaccelerator.keys="shm_only"
eaccelerator.sessions="shm_only"
eaccelerator.content="shm_only"

# 在 eAccelerator 之后启用 ZendOptimizer ，避免 eaccelerator.so 不能加载。
[Zend]
zend_optimizer.optimization_level=1023
zend_extension=/usr/local/php5-fcgi/lib/php/extensions/no-debug-non-zts-20060613/ZendOptimizer.so

# 开启 memcache
[memcache]
extension=memcache.so

用 tmpfs 提升性能
mkdir /tmpfs
在 /etc/fstab 中加入
tmpfs                   /tmpfs              tmpfs   size=256m,mode=1777        0 0

mount -a

创建相关目录
mkdir /tmpfs/eaccelerator
chown -R nobody:nobody /tmpfs/eaccelerator
chmod -R 1777 /tmpfs/eaccelerator

清除超过一小时没有被访问到的 eAccelerator 缓存文件，防止占满空间。
vi /etc/crontab
0 * * * * root find /tmpfs/eaccelerator -type f -amin +60 -exec rm {} \;


启动 PHP FastCGI
创建相关目录
mkdir /var/log/php5-fpm
vi /usr/local/php5-fcgi/etc/php-fpm.conf
修改错误日志存放路径
<value name="error_log">/var/log/php5-fpm/error.log</value>
设置监听地址及端口
<value name="listen_address">127.0.0.1:9000</value>
进程运行的组及用户
<value name="user">nobody</value>
<value name="group">nobody</value>
始终运行 80 个子进程，根据内存总量和应用的消耗内存状况估算。
<value name="max_children">80</value>
设置 php-cgi 进程处理脚本的超时时间为 60 秒，可以防止进程都被挂起。
<value name="request_terminate_timeout">60s</value>
记录慢响应的日志文件
<value name="request_slowlog_timeout">1s</value>
<value name="slowlog">/var/log/php5-fpm/slow.log</value>
增大一个进程可打开文件句柄数量
<value name="rlimit_files">65536</value>
增大最大响应数
<value name="max_requests">16384</value>

修改 pid 文件路径
<value name="pid_file">/var/run/php5-fpm.pid</value>
启动、停止会报错，但 php-cgi 进程已经有了，所以保留 pid 文件路径为默认值。

ulimit -SHn 65536
/usr/local/php5-fcgi/sbin/php-fpm start

永久增大 Shell 对一个进程打开的文件句柄数量：
echo -ne "
fs.file-max = 65536
" >> /etc/sysctl.conf
sysctl -p

echo -ne "
* soft nofile 65536
* hard nofile 65536
" >> /etc/security/limits.conf

php-fpm 还有其他参数，包括： start|stop|quit|restart|reload|logrotate ，
修改 php.ini 后重新加载配置文件使用 reload ，可以不重启 PHP FastCGI 进程。

开机自启动
vi /etc/rc.local
mkdir /tmpfs/eaccelerator
chown -R nobody:nobody /tmpfs/eaccelerator
chmod -R 1777 /tmpfs/eaccelerator
ulimit -SHn 65536
/usr/local/php5-fcgi/sbin/php-fpm start