http://www.oracle.com/technology/global/cn/software/products/database/oracle10g/htdocs/10201linuxsoft.html
http://www.oracle.com/technology/software/tech/linux/asmlib/rhel4.html
http://www.oracle.com/technology/documentation/index.html


规划：
主机规划：
             节点1                  节点2
主机名       rac1                   rac2
Public NIC   eth0                   eth0
Private NIC  eth1                   eth1
Public IP    192.168.0.51/rac1      192.168.0.52/rac2
VIP          192.168.0.81/rac1-vip  192.168.0.82/rac2-vip
Private IP   10.0.0.51/rac1-priv    10.0.0.52/rac2-priv


RHEL4 的安装，只留下了 X Window System 的 base, gdm, vncserver 和 Gnome 的 base 。


Filesystem            Size  Used Avail Use% Mounted on
/dev/sda3            1012M  179M  782M  19% /
/dev/sda1             122M  8.0M  108M   7% /boot
none                  506M     0  506M   0% /dev/shm
/dev/mapper/vg-oracle
                      9.9G   55M  9.3G   1% /oracle
/dev/mapper/vg-tmp   1008M  1.3M  956M   1% /tmp
/dev/mapper/vg-usr    4.0G  1.5G  2.3G  40% /usr
/dev/mapper/vg-var    2.0G   67M  1.9G   4% /var

操作系统的基本配置。

vi /etc/hosts
192.168.0.51    rac1
192.168.0.52    rac2

10.0.0.51       rac1-priv
10.0.0.52       rac2-priv

192.168.0.81    rac1-vip
192.168.0.82    rac2-vip


查看缺哪些包：
rpm -q binutils compat-db control-center gcc gcc-c++ glibc glibc-common gnome-libs libstdc++ \
libstdc++-devel make pdksh sysstat xscreensaver libaio | grep not\ installed$ | awk '{print $2}'
缺什么就装什么：
yum install gcc gcc-c++ gnome-libs libstdc++-devel sysstat


创建目录及用户
groupadd -g 115 dba
useradd -u 175 -g 115 -d /oracle -s /bin/bash -c "Oracle Software Owner" oracle
chown -R oracle:dba /oracle
passwd oracle


vi /etc/sysctl.conf
kernel.shmall = 2097152
kernel.shmmax = 2147483648
kernel.shmmni = 4096
kernel.sem = 250 32000 100 128
fs.file-max = 65536
net.ipv4.ip_local_port_range = 1024 65000
net.core.rmem_default = 1048576
net.core.rmem_max = 1048576
net.core.wmem_default = 262144
net.core.wmem_max = 262144


vi /etc/security/limits.conf
oracle              soft    nproc   2047
oracle              hard    nproc   16384
oracle              soft    nofile  1024
oracle              hard    nofile  65536


vi /etc/pam.d/login
session    required     /lib/security/pam_limits.so
session    required     pam_limits.so


vi /etc/ssh/sshd_config
UsePAM yes


vi /etc/profile
if [ $USER = "oracle" ]; then
        if [ $SHELL = "/bin/ksh" ]; then
              ulimit -p 16384
              ulimit -n 65536
        else
              ulimit -u 16384 -n 65536
        fi
fi


vi /etc/csh.login
if ( $USER == "oracle" ) then
        limit maxproc 16384
        limit descriptors 65536
endif


配置 hangcheck-timer 模块：
vi /etc/rc.modules
#!/bin/sh
#
# This script will be load other user-defined modules.

modprobe hangcheck-timer

chmod +x /etc/rc.modules

vi /etc/modprobe.conf
options hangcheck-timer hangcheck_tick=30 hangcheck_margin=180


su - oracle
vi .bash_profile
export NLS_LANG="AMERICAN_AMERICA.ZHS16GBK"
export NLS_TERRITORY="CHINA"
export NLS_DATE_FORMAT="yyyy-mm-dd hh24:mi:ss"
export ORACLE_BASE=/oracle
export ORACLE_HOME=$ORACLE_BASE/product/database
export CRS_HOME=$ORACLE_BASE/product/crs
export ORA_NLS33=$ORACLE_HOME/ocommon/nls/admin/data
export LD_LIBRARY_PATH=$ORACLE_HOME/lib:/lib:/usr/lib:/usr/local/lib
export ORACLE_SID=rac1
PATH=$PATH:$HOME/bin:$ORACLE_HOME/bin:$CRS_HOME/bin:/sbin


vncserver
设置密码并修改 .vnc/xstartup 文件，配置 VNC 使用中文的 Gnome 桌面环境。
#!/bin/sh

# Uncomment the following two lines for normal desktop:
# unset SESSION_MANAGER
# exec /etc/X11/xinit/xinitrc

export LANG="en_US.GBK"

[ -x /etc/vnc/xstartup ] && exec /etc/vnc/xstartup
[ -r $HOME/.Xresources ] && xrdb $HOME/.Xresources
xsetroot -solid grey
vncconfig -iconic &
#xterm -geometry 80x24+10+10 -ls -title "$VNCDESKTOP Desktop" &
#twm &
gnome-session

exit 回到 root 下，修改 /etc/sysconfig/vncservers 文件
VNCSERVERS="1:oracle"
VNCSERVERARGS[1]="-geometry 800x600"

重启一下 VNCServer
/etc/init.d/vncserver restart

之后，可以通过 VNC 客户端远程连接了。


生成 SSH 公私钥：
su - oracle
mkdir .ssh
chmod 700 .ssh
cd .ssh
ssh-keygen -t rsa
ssh-keygen -t dsa
mv id_rsa.pub authorized_keys
mv id_dsa.pub authorized_keys2


添加共享存储：
mkdir vmware/san
cd vmware/san
vmware-vdiskmanager -c -s 72Gb -a lsilogic -t 0 lun1.vmdk
vmware-vdiskmanager -c -s 72Gb -a lsilogic -t 0 lun2.vmdk
vmware-vdiskmanager -c -s 72Gb -a lsilogic -t 0 lun3.vmdk
vmware-vdiskmanager -c -s 72Gb -a lsilogic -t 0 lun4.vmdk

cd ../rac1
vi rac1.vmx
disk.locking = "FALSE"
scsi1.present = "TRUE"
scsi1.virtualDev = "lsilogic"

scsi1:1.present = "TRUE"
scsi1:1.fileName = "/home/vmware/san/lun1.vmdk"
scsi1:1.shared = "TRUE"

scsi1:2.present = "TRUE"
scsi1:2.fileName = "/home/vmware/san/lun2.vmdk"
scsi1:2.shared = "TRUE"

scsi1:3.present = "TRUE"
scsi1:3.fileName = "/home/vmware/san/lun3.vmdk"
scsi1:3.shared = "TRUE"

scsi1:4.present = "TRUE"
scsi1:4.fileName = "/home/vmware/san/lun4.vmdk"
scsi1:4.shared = "TRUE"

fdisk /dev/sdb
sdb1: 100M
sdb2: 14 - 2357
sdb3: 2358 - 4700
sdb4: 4701 - 9399

fdisk /dev/sdc
sdc1: 100M
sdc2: 14 - 2357
sdc3: 2358 - 4700
sdc4: 4701 - 9399

sdd1: ALL
sde1: ALL


配置裸设备：
vi /etc/sysconfig/rawdevices
/dev/raw/raw1 /dev/sdb1
/dev/raw/raw2 /dev/sdc1

vi /etc/udev/permissions.d/50-udev.permissions
# raw devices
ram*:oracle:dba:0660
raw/*:oracle:dba:0660

chkconfig --list rawdevices
rawdevices      0:off   1:off   2:off   3:on    4:on    5:on    6:off

/etc/init.d/rawdevices restart


创建 ASM 磁盘：
oracleasm-2.6.9-89.EL-2.0.5-1.el4.i686.rpm
oracleasm-support-2.1.3-1.el4.i386.rpm
oracleasmlib-2.0.4-1.el4.i386.rpm

rpm -ivh *.rpm

/etc/init.d/oracleasm configure
Default user to own the driver interface []: oracle
Default group to own the driver interface []: dba
Start Oracle ASM library driver on boot (y/n) [n]: y
Scan for Oracle ASM disks on boot (y/n) [y]: y

/etc/init.d/oracleasm createdisk VOL1 /dev/sdb4
/etc/init.d/oracleasm createdisk VOL2 /dev/sdc4
/etc/init.d/oracleasm createdisk VOL3 /dev/sdd1
/etc/init.d/oracleasm createdisk VOL4 /dev/sde1

/etc/init.d/oracleasm listdisks

其它节点需要：
/etc/init.d/oracleasm scandisks


准备安装文件：
unzip -d /oracle /usr/local/src/10201_clusterware_linux32.zip
unzip -d /oracle/orainstall /usr/local/src/10201_database_linux32.zip
unzip -d /oracle /usr/local/src/p6810189_10204_Linux-x86.zip


此时，把 rac1 复制为 rac2 ，再修改 rac2 机器的配置：
cd /etc/sysconfig/network-scripts
修改 ifcfg-eth0 ifcfg-eth1 的 IP 地址和 MAC 地址。

vi /etc/sysconfig/network
HOSTNAME=rac2

修改用户环境：
su - oracle
vi .bash_profile
export ORACLE_SID=rac2

配置 SSH 用户等价：
在两个节点上：
ssh rac1
ssh rac1-priv
ssh rac2
ssh rac2-priv


安装 Oracle Clusterware:
/oracle/cluterware/runInstaller

1.  欢迎页面。直接点击 Next 。
2.  oraInventory 位置及操作系统组都使用默认值。直接 Next 。
3.  安装路径 /oracle/product/crs ，产品语言中添加 "Simplified Chinese" 。
4.  安装环境的检查。
5.  集群配置： Add rac2
6.  网络配置：把 eth0 改为 Public 。
7.  使用 External Redundancy 并指定 OCR 位置： /dev/raw/raw1 。
8.  使用 External Redundancy 并指定 Voting Disk 位置： /dev/raw/raw2 。
9.  摘要。点击 Install 开始安装。
10. 在所有节点以 root 身份执行 /oracle/oraInventory/orainstRoot.sh 和 /oracle/product/crs/root.sh 。
    rac2 执行 root.sh 最后有个错误，先不管。

最后会出现一个错误。是 VIPCA 失败问题。不要关闭这个页面。
在 rac2 上以 root 身份执行：
/oracle/product/crs/bin/vipca

1.  欢迎页面。直接点击 Next 。
2.  选择把 VIP 绑定在 eth0 上。
3.  填写 VIP 信息。
4.  摘要。结束。

回到 rac1 的安装界面，重新执行检查。结束安装。

检查安装是否成功：
olsnodes
crsctl check crs
crs_stat -t -v


重装 Clusterware 在运行 root.sh 时出现问题：
Checking to see if Oracle CRS stack is already configured
Oracle CRS stack is already configured and will be running under init(1M)

需要在所有节点删除： /etc/oracle/scls_scr/`uname -n`/oracle/cssfatal


安装 Oracle Database
/oracle/orainstall/database/runInstaller

1.  欢迎页面。直接点击 Next 。
2.  选择安装类型。企业版，产品语言中添加 "Simplified Chinese" 。
3.  安装路径。使用默认值， Next 。
4.  安装集群版的数据库。选上 rac2 。
5.  安装环境的检查。查看一下是否有问题，有问题就解决问题。对于操作系统版本不被支持的警告可以忽略。
6.  不创建数据库，选择 "Install database Software only" 。
7.  摘要。点击 Install 开始安装。
8.  需要以 root 用户在两个节点执行 /oracle/product/database/root.sh ，执行完后点击 OK 。
9.  结束安装。


配置 Listener
在任一节点执行 netca

1.  选择 "Cluster configuration" 。
2.  选择所有节点。
3.  配置 Listener 。
4.  添加 Listener 。
5.  Listener 名称。
6.  选择 TCP 协议。
7.  使用端口 1521 。
8.  不配置其它 Listener 。
9.  结束。

确认 Listener 配置成功：
crs_stat -t -v | grep lsnr


创建 ASM
执行 dbca

1.  欢迎页面。直接点击 Next 。
2.  选择配置 ASM 。
3.  选择所有节点。
4.  设置 SYS 密码。使用 PFILE 。弹出框点 OK 开始启动 ASM 实例。
5.  创建磁盘组。 DATA: ORCL:VOL1 , RECOVERY: ORCL:VOL2 ， Redundancy 都用 External 。
6.  确认磁盘组的状态都是 MOUNTED ，结束。


打补丁升级到 10.2.0.4:
升级 Clusterware:
以 root 用登陆，两个节点都停止：
/oracle/product/crs/bin/crsctl stop crs

/oracle/Disk1/runInstaller
Destination 选择 OraCrs10g_home ，一路 Next 。

最后依次在两个节点上再次停止 CRS 后执行 root102.sh:
/oracle/product/crs/bin/crsctl stop crs
/oracle/product/crs/install/root102.sh

升级 Database:
以 root 用登陆，两个节点都停止：
/oracle/product/crs/bin/crsctl stop crs

/oracle/Disk1/runInstaller
Destination 选择 OraDb10g_home1 ，一路 Next 。

最后依次在两个节点上执行 root.sh:
/oracle/product/database/root.sh

然后启动 CRS:
/oracle/product/crs/bin/crsctl start crs