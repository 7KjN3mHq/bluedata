查出目前 ip_conntrack 记录最多的前五名 IP
cat /proc/net/ip_conntrack | cut -d ' ' -f 10 | cut -d '=' -f 2 | sort | uniq -c | sort -nr | head -n 5
找出连接最多的 IP 地址
netstat -na | grep ESTABLISHED | awk '{print $5}' | awk -F: '{print $1}' | sort | uniq -c | sort -r +0n
netstat -na | grep SYN | awk '{print $5}' | awk -F: '{print $1}' | sort | uniq -c | sort -r +0n

netstat:
netstat -s -t | grep connections\ established
netstat -na | grep 80 | awk '{print $5}' | cut -d : -f1 | sort | more
watch "netstat -an | grep IP:80 | grep ESTABLISHED | wc -l"
netstat -an | grep IP:80 | grep SYN | wc -l
netstat -an | grep IP:80 | grep FIN_WAIT | wc -l
netstat -an | grep IP:80 | grep FIN_WAIT2 | wc -l
netstat -an | grep IP:80 | grep TIME_WAIT | wc -l


ps:
显示10个消耗CPU最多的进程
ps aux | head -1 ;ps aux | sort -rn +2 | head -10
显示10个消耗存储空间最多的进程
ps aux | head -1 ;ps aux | sort -rn +3 | head -10
按处理时间为顺序显示系统中的前十个进程
ps vx | head -1 ;ps vx | grep -v PID | sort -rn +3 | head -10
按实际内存使用的多少顺序显示系统中的前十个进程
ps vx | head -1 ;ps vx | grep -v PID | sort -rn +6 | head -10
按换入页面的多少顺序显示系统中的前10个进程
ps vx | head -1 ;ps vx | grep -v PID | sort -rn +4 | head -10

以下两个有待测试
按顺序显示系统中受罚的进程
ps -eal | head -1 ;ps -eal | sort -rn +5
按优先级顺序显示系统中的进程
ps -eal | sort -n +6 | head


tcpdump:
抓取访问指定主机 80 端口的包
tcpdump -Xl -s 0 -i eth0 -w /home/tmp.txt dst host 192.168.0.254 and port 80 &
抓取来自指定 IP 访问某一主机 80 端口的包
tcpdump -Xl -s 0 -i eth0 -w /home/tmp.txt dst host 61.139.2.69 and src 192.168.0.3 and port 80 &


apache:
watch "ps -e | grep httpd | wc -l"
httptop -f combined /var/log/apache/access_log.`date +%Y%m%d`

lighttpd:
wget --quiet -O - "http://219.153.35.31:81/server-status" | grep -A 1 "5s sliding average" | grep "Requests" | awk '{print $2}' | sed -e "s/class=\"string\">//g"

nginx:
wget --quiet -O - "http://202.75.216.164/server-status" | head -1 | awk '{print $3}'


mysql:
watch "/usr/local/mysql/bin/mysqladmin -uUSERNAME -pPASSWORD status"
mtop --dbuser=mtop --password=mtop


存储空间占用情况分析
显示两层，只显示MB和GB大小的：
du -h --max-depth=2 /usr/local | grep [MG]


标题栏中连续平均负载显示
vi /usr/local/bin/tl
#!/usr/bin/perl -w

use strict;
$|++;

my $host=`/bin/hostname`;
chomp $host;

while(1) {

  open(LOAD,"/proc/loadavg") || die "Couldn't open /proc/loadavg: $!\n";

  my @load=split(/ /,<LOAD>);
  close(LOAD);

  print "\033]0;";
  print "$host: $load[0] $load[1] $load[2] at ", scalar(localtime);
  print "\007";

  sleep 2;
}

chmod +x /usr/local/bin/tl
echo 'tl & > /dev/null 2>&1' >> ~/.bash_login
echo 'killall tl > /dev/null 2>&1' >> ~/.bash_logout